knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
setwd("/Users/nabibahmed/OneDrive - Harvard University/Spring 2021/STAT286/Module 4/Exercise 1")
getwd()
setwd("/Users/nabibahmed/OneDrive - Harvard University/Spring 2021/STAT286/Module 4/Exercise 1")
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
library(readr)
df <- read_csv("worm.csv")
df <- df[complete.cases(df), ]
##Based on the results from Q1 and Q2 ##
#Point estimate of the SATE
attach(df)
j1 = length(unique(schid[wgrp1==1]))
j0 = length(unique(schid[wgrp1==0]))
j = j1+j0
avg_trt_clt=j*sum(totpar98[wgrp1==1])/(length(wgrp1)*j1)
avg_ctl_clt=j*sum(totpar98[wgrp1==0])/(length(wgrp1)*j0)
point_estimate_cluster = avg_trt_clt-avg_ctl_clt
detach(df)
print(point_estimate_cluster)
#Standard error
library(dplyr)
df_group= df %>%
group_by(schid, wgrp1) %>%
summarise(sum_outcome = sum(totpar98))
n = length(df$wgrp1)
attach(df_group)
var_cluster = var(sum_outcome[wgrp1==1]*j/n)/j1 + var(sum_outcome[wgrp1==0]*j/n)/j0
detach (df_group)
se_cluster = sqrt(var_cluster)
print(se_cluster)
#Corresponding asymptotic 95%
CI_95_upper_clt = point_estimate_cluster + 1.96*se_cluster
CI_95_lower_clt = point_estimate_cluster - 1.96*se_cluster
# The upper bound of 95% CI:
print(CI_95_upper_clt)
# The lower bound of 95% CI:
print(CI_95_lower_clt)
##################################
##Based on the wrong assumption ##
#Point estimate of the SATE
attach(df)
avg_trt_wrg=sum(totpar98[wgrp1==1])/sum(wgrp1)
avg_ctl_wrg=sum(totpar98[wgrp1==0])/(length(wgrp1)-sum(wgrp1))
point_estimate_wrg = avg_trt_wrg-avg_ctl_wrg
print(point_estimate_wrg)
#Standard error
var_wrg = var(totpar98[wgrp1==1])/sum(wgrp1) + var(totpar98[wgrp1==0])/(length(wgrp1)-sum(wgrp1))
detach(df)
se_wrg = sqrt(var_wrg)
print(se_wrg)
#Corresponding asymptotic 95%
CI_95_upper_wrg = point_estimate_wrg + 1.96*se_wrg
CI_95_lower_wrg = point_estimate_wrg - 1.96*se_wrg
# The upper bound of 95% CI:
print(CI_95_upper_wrg)
# The lower bound of 95% CI:
print(CI_95_lower_wrg)
View(df)
View(df_group)
View(df)
unique(df$schid)
len(unique(df$schid))
length(unique(df$schid))
reg2 = lm(totpar98 ~ factor(schid), data = df)
summary(reg2)$r.squared
# Assuming ICC same across treatment and control
reg2 = lm(totpar98 ~ factor(schid), data = df)
summary(reg2)$r.squared
df.treated = df[df$wgrp1 == 1,]
df.control = df[df$wgrp1 == 0,]
View(df.control)
View(df.treated)
9299+19077
9299+18077
# Assuming ICC same across treatment and control
reg2 = lm(totpar98 ~ factor(schid), data = df)
summary(reg2)$r.squared
df.treated = df[df$wgrp1 == 1,]
df.control = df[df$wgrp1 == 0,]
# Assuming ICC different for treatment and control
reg3 = lm(totpar98 ~ factor(schid), data = df.treated)
summary(reg2)$r.squared
reg4 = lm(totpar98 ~ factor(schid), data = df.control)
summary(reg2)$r.squared
### Your code here
batch = read.csv("batch.csv")
getwd()
setwd("/Users/nabibahmed/Desktop/Local Spring 2021/STAT215/Coursework/HW2")
# ```{r install, eval = FALSE}
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("sva")
# BiocManager::install("DESeq2")
# BiocManager::install("tximport")
# install.packages(c("ggplot2", "dplyr",
#                    "pheatmap"))
# BiocManager::install("fgsea")
# BiocManager::install("ComplexHeatmap")
library(ggplot2)
library(sva)
library(DESeq2)
library(tximport)
library(dplyr)
library(fgsea)
library(pheatmap)
library(ComplexHeatmap)
