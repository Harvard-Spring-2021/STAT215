knitr::include_graphics("/Q1/flagstat.png")
getwd()
# setting work directory
dir = "/Users/nabibahmed/Desktop/Local Spring 2021/STAT215/Coursework/HW3"
setwd(dir)
knitr::include_graphics("/Q1/flagstat.png")
knitr::include_graphics("Q1/flagstat.png")
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = x(1.8, 2.7, 42.6, 52.9)
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
rbind(s1, s2, s3, s4, s5)
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
apply(S, 1, mean)
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
apply(S, 1, mean())
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
apply(S, 1, mean(x))
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
lapply(S, mean)
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
apply(S, 2, mean)
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
S = rbind(S, apply(S, 2, mean))
S
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
S = rbind(S, apply(S, 2, mean))
row.names(S) = c("Sample 1",
"Sample 2",
"Sample 3",
"Sample 4",
"Sample 5",
"Sample Average",)
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
S = rbind(S, apply(S, 2, mean))
row.names(S) = c("Sample 1",
"Sample 2",
"Sample 3",
"Sample 4",
"Sample 5",
"Sample Average")
colnames(S) = c("% promoter", "% exon", "% intron", "% intergenic")
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
S = rbind(S, apply(S, 2, mean))
row.names(S) = c("Sample 1",
"Sample 2",
"Sample 3",
"Sample 4",
"Sample 5",
"Sample Average")
colnames(S) = c("% promoter", "% exon", "% intron", "% intergenic")
data.frame(S)
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
S = rbind(S, apply(S, 2, mean))
S = data.frame(S)
row.names(S) = c("Sample 1",
"Sample 2",
"Sample 3",
"Sample 4",
"Sample 5",
"Sample Average")
colnames(S) = c("% promoter", "% exon", "% intron", "% intergenic")
# vector correspond to % peaks in promoter/exon/intron/intergenic
s1 = c(2.7, 3.0, 44.0, 50.3)
s2 = c(1.3, 2.3, 44.8, 51.6)
s3 = c(1.8, 2.7, 42.6, 52.9)
s4 = c(2.0, 2.8, 45.1, 50.1)
s5 = c(1.1, 1.9, 45.2, 51.8)
S = rbind(s1, s2, s3, s4, s5)
S = rbind(S, apply(S, 2, mean))
S = data.frame(S)
row.names(S) = c("Sample 1",
"Sample 2",
"Sample 3",
"Sample 4",
"Sample 5",
"Sample Average")
colnames(S) = c("% promoter", "% exon", "% intron", "% intergenic")
print(S)
pip install virtualenv
virtualenv python
install.packages("reticulate")
reticulate::py_config()
# setting work directory
dir = "/Users/nabibahmed/Desktop/Local Spring 2021/STAT215/Coursework/HW3"
setwd(dir)
q13.1 = read.csv("Q13/q12_results.bed")
View(q13.1)
q13.1 = read.delim("Q13/q12_results.bed", header=T)
View(q13.1)
q13.1 = read.delim("Q13/q12_results.bed")
q13.1 = read.delim("Q13/q12_results.bed")
q13.1 = read.delim("Q13/q12_results.bed", header=F)
q13.1 = read.delim("Q13/q12_results.bed", header = F)
colnames(q13.1) = c("chr", "start", "end", "sign", "gene")
q13.1 = read.delim("Q13/q12_results.bed", header = F)
colnames(q13.1) = c("chr", "start", "end", "sign", "gene")
write(colnames$gene, file = "Q13/q13pt1.txt")
q13.1 = read.delim("Q13/q12_results.bed", header = F)
colnames(q13.1) = c("chr", "start", "end", "sign", "gene")
write(q13.1$gene, file = "Q13/q13pt1.txt")
alone = read.delim("Q13/q12_results.bed", header = F)
colnames(alone) = c("chr", "start", "end", "sign", "gene")
write(alone$gene, file = "Q13/q13pt1.txt")
upregulated = read.delim("Q13/up_regulated_genes_in_prostate_cancer.txt")
View(upregulated)
alone = read.delim("Q13/q12_results.bed", header = F)
colnames(alone) = c("chr", "start", "end", "sign", "geneName")
write(alone$geneName, file = "Q13/q13pt1.txt")
upregulated = read.delim("Q13/up_regulated_genes_in_prostate_cancer.txt")
intersect(alone$geneName, upregulated$geneName)
View(alone)
upregulated = read.delim("Q13/up_regulated_genes_in_prostate_cancer.txt")
overlap = intersect(alone$geneName, upregulated$geneName)
write(overlap, file = "Q13/overlap.txt")
potentials = read.delim("Q14/AR_peaks_regulatory_potential.txt")
View(potentials)
intersect(alone$geneName, upregulated$geneName)
potentials[order(score),]
potentials[order(potentials$score),]
potentials[order(potentials$score, decreasing = F),]
potentials[order(potentials$score, decreasing = T),]
potentials[1:1500,]
potentials = read.delim("Q14/AR_peaks_regulatory_potential.txt")
# sort by score
potentials[order(potentials$score, decreasing = T),]
top1500 = potentials[1:1500,]
write(top1500, file = "Q14/top1500.txt")
potentials = read.delim("Q14/AR_peaks_regulatory_potential.txt")
# sort by score
potentials[order(potentials$score, decreasing = T),]
top1500 = potentials[1:1500,]
write(top1500$symbol, file = "Q14/top1500.txt")
potentials = read.delim("Q14/AR_peaks_regulatory_potential.txt")
# sort by score
potentials[order(potentials$score, decreasing = T),]
top1500 = potentials[1:1500,]
write(top1500$symbol, file = "Q14/top1500.txt")
potentials = read.delim("Q14/AR_peaks_regulatory_potential.txt")
# sort by score
potentials = potentials[order(potentials$score, decreasing = T),]
top1500 = potentials[1:1500,]
write(top1500$symbol, file = "Q14/top1500.txt")
intersect(top1500$symbol, upregulated$geneName)
overlap1500 = intersect(top1500$symbol, upregulated$geneName)
write(overlap1500, file = "Q14/overlap1500.txt")
overlap
intersect(potentials$symbol, upregulated$geneName)
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed")
View(ATACtumor)
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
View(ATACtumor)
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
ATACtumor[order(ATACtumor$score, decreasing = T),]
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
top10K
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write(top10K, file = "Q19/top10K.txt")
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K, file = "Q19/top10K.txt")
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K, file = "Q19/top10K.txt")
top10K[c(1:3),]
top10K[,c(1:3)]
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.txt")
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.txt",
row.names = F,
col.names = F)
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.bed",
row.names = F,
col.names = F)
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.txt",
row.names = F,
col.names = F)
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.txt",
row.names = F,
col.names = F,
sep = "/t")
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.txt",
row.names = F,
col.names = F,
sep = "/t")
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.txt",
row.names = F,
col.names = F,
sep = "\t")
ATACtumor = read.delim("Q19/tumor_ATAC_peaks.bed", header = F)
colnames(ATACtumor) = c("chr", "start", "end", "peak", "score")
# sort and subset the top 10K
ATACtumor = ATACtumor[order(ATACtumor$score, decreasing = T),]
top10K = ATACtumor[1:10000,]
write.table(top10K[,c(1:3)], file = "Q19/top10K.bed",
row.names = F,
col.names = F,
sep = "\t")
View(ATACtumor)
top10K[,c(1:3)]
961533/1000010
855308/1000010
